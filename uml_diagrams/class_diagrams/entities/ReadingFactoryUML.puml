@startuml
interface ReadingFactory
{
+create(language: Language): Reading
}

interface DifficultyReadingFactory
{
+create(language: Language): Reading
+create(language: Language, difficulty: DifficultyLevel, numOfTries: Integer): Optional<Reading>
+{static} getReadingDifficulty(language: Language, reading: Reading): Double
}

class NewsReadingFactory
{
-newsRetriever: NewsRetrieverInterface

+setNewsRetriever(newsRetrieverInterface: NewsRetrieverInterface): void
+getNewsRetriever(): NewsRetrieverInterface
+create(language: Language): Reading
+create(language: Language, difficulty: DifficultyLevel, numOfTries: Integer): Optional<Reading>
}

class WikiArticleReadingFactory
{
+create(language: Language): Reading
+create(language: Language, difficulty: DifficultyLevel, numOfTries: Integer): Optional<Reading>
}

class AIGeneratedStoryReadingFactory
{
+create(language: Language): Reading
+create(language: Language, difficulty: DifficultyLevel, numOfTries: Integer): Optional<Reading>
}

interface Reading
{
+display(): ReadingDisplay
}

enum DifficultyLevel
{
BEGINNER
INTERMEDIATE
ADVANCED

DifficultyLevel(name: String, minReadRange: Integer, maxReadRange: Integer)
}

enum Language
{
ENGLISH
FRENCH
SPANISH
GERMAN

Language(name: String, code: String, syllableCalculator: SyllableCalculator)
}

ReadingFactory <|-- DifficultyReadingFactory
DifficultyReadingFactory <|.. NewsReadingFactory
DifficultyReadingFactory <|.. WikiArticleReadingFactory
DifficultyReadingFactory <|.. AIGeneratedStoryReadingFactory

DifficultyLevel <.. DifficultyReadingFactory: <<uses as param>>
Language <.. ReadingFactory: <<uses as param>>

Reading <.. ReadingFactory: <<creates>>
@enduml